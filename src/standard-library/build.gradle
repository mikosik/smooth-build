plugins {
    id 'java-library'
}

jar {
    archiveBaseName = 'std_lib'
}

dependencies {
    implementation project(':src:common')
    implementation project(':src:virtual-machine')
    implementation libs.guava
    implementation libs.okio
    implementation libs.zip4j

    testImplementation testFixtures(project(":src:virtual-machine"))
    testImplementation testFixtures(project(":src:evaluator"))
    testImplementation project(':src:common-testing')
    testRuntimeOnly libs.junit.jupiter.engine
    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.params
    testImplementation libs.mockito
    testImplementation libs.truth
}

// JunitTest needs access to junit4 jar and its dependencies.
// Below separate `junit4` configuration is created that depends
// on junit4 and `junit4files` resolves dependencies and stores
// files in `junit4files` directory
configurations {
    junit4
}
dependencies {
    junit4 'junit:junit:4.13.2'
}
def junit4files = tasks.register('junit4files', Copy) {
    from configurations.getByName("junit4").resolvedConfiguration.files
    into file("${buildDir}/junit4files")
}
tasks.test.dependsOn(junit4files)

def zip = tasks.register('zip', Zip) {
    manifest {
        attributes = []
    }
    archiveBaseName = 'std_lib-all'
    dependsOn jar
    from jar
    from layout.projectDirectory.dir('src/main/smooth')
}
tasks.assemble.dependsOn(zip)

test {
    useJUnitPlatform()
    jvmArgs "-Xshare:off"  // to silence JVM warning emitted by gradle
}
