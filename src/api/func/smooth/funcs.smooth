
File {
  Blob content,
  String path,
};

Message {
  String text,
  String severity,
};

File aidl(
  String apiLevel,
  String buildToolsVersion,
  File interfaceFile,
);

[Blob] concatenateBlobArrays(
  [Blob] blobs,
  [Blob] with,
);

[File] concatenateFileArrays(
  [File] files,
  [File] with,
);

[String] concatenateStringArrays(
  [String] strings,
  [String] with,
);

Blob content(
  File file,
);

File file(
  String path,
);

[File] files(
  String dir,
);

[File] filter(
  [File] files,
  String include,
);

Blob jar(
  [File] files,
  Blob manifest = File("META-INF/MANIFEST.MF", toBlob("")),
  String javaVersion = javaVersion(),
);

[File] javac(
  [File] srcs,
  [Blob] libs = [],
  String source = "1.8",
  String target = "1.8",
  [String] options = [],
) = javac_(
    srcs = srcs,
    libs = libs,
    options = concatenateStringArrays(["-source", source, "-target", target], with = options)); 

[File] javac_(
  [File] srcs,
  [Blob] libs = [],
  [String] options = [],
  String javaVersion = javaVersion(),
);

String javaVersion();

String junit(
  Blob tests,
  [Blob] deps = [],
  String include = "**/*Test.class",
);

String path(
  File file,
);

Blob toBlob(
  String string,
);

String toString(
  Blob blob,
);

[File] unjar(
  Blob jar,
  String javaVersion = javaVersion(),
);

[File] unzip(
  Blob blob,
  String javaVersion = javaVersion(),
);

Blob zip(
  [File] files,
  String javaVersion = javaVersion(),
);
