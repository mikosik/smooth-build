plugins {
    id 'application'
}

application {
    mainClass = 'org.smoothbuild.cli.Main'
}

dependencies {
    implementation project(':src:common')
    implementation project(':src:antlr-report-matcher')
    implementation project(':src:compiler-frontend')
    implementation project(':src:compiler-backend')
    implementation project(':src:virtual-machine')
    implementation project(':src:evaluator')

    implementation libs.guava
    implementation libs.guice
    implementation libs.okio
    implementation libs.picocli

    testImplementation project(':src:common-testing')
    testImplementation project(':src:virtual-machine')
    testImplementation testFixtures(project(':src:common'))
    testImplementation testFixtures(project(':src:virtual-machine'))
    testImplementation testFixtures(project(':src:evaluator'))
    testImplementation libs.guava.testlib
    testRuntimeOnly libs.junit.jupiter.engine
    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.params
    testImplementation libs.mockito
    testImplementation libs.truth
}

def fatJar = tasks.register('fatJar', Jar) {
    manifest {
        attributes = []
    }
    archiveBaseName = 'smooth'
    dependsOn configurations.runtimeClasspath
    dependsOn sourceSets.main.output
    from sourceSets.main.output
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect {
            zipTree(it).matching {
                exclude "META-INF/**", "LICENSE", "module-info.class"
            }
        }
    }
}
tasks.assemble.dependsOn(fatJar)

test {
    useJUnitPlatform()
    jvmArgs "-Xshare:off"  // to silence JVM warning emitted by gradle
}
