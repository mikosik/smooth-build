plugins {
    id 'application'
    id 'java-test-fixtures'
}

application {
    mainClass = 'org.smoothbuild.cli.Main'
}

dependencies {
    implementation project(':src:common')
    implementation project(':src:antlr-smooth')
    implementation project(':src:antlr-task-matcher')
    implementation project(':src:compiler-frontend')

    implementation libs.guava
    implementation libs.guice
    implementation libs.okio
    implementation libs.picocli

    testFixturesApi project(':src:common')
    testFixturesApi project(':src:compiler-frontend')
    testFixturesApi libs.guava
    testFixturesApi libs.guice
    testFixturesApi libs.junit.jupiter.api
    testFixturesApi libs.mockito
    testFixturesApi libs.okio
    testFixturesApi libs.truth

    testImplementation libs.guava.testlib
    testRuntimeOnly libs.junit.jupiter.engine
    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.params
    testImplementation libs.mockito
    testImplementation libs.truth
    testImplementation project(':src:common-testing')
}

def fatJar = tasks.register('fatJar', Jar) {
    manifest {
        attributes = []
    }
    archiveBaseName = 'smooth'
    dependsOn configurations.runtimeClasspath
    dependsOn sourceSets.main.output
    from sourceSets.main.output
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect {
            zipTree(it).matching {
                exclude "META-INF/**", "LICENSE"
            }
        }
    }
}
tasks.assemble.dependsOn(fatJar)

test {
    useJUnitPlatform()
}
