SModule(
  types = [
  ]
  evaluables = [
    result=sPolyEvaluable(
      typeParams = []
      evaluable = SNamedExprValue(
        type = (Int)->Int
        fqn = result
        location = {t-project}/module.smooth:1
        body = SLambda(
          fqn = result:lambda~1
          type = (Int)->Int
          params = [
            SItem(
              type = Int
              fqn = result:lambda~1:int
              defaultValue = None
              location = {t-project}/module.smooth:2
            )
          ]
          location = {t-project}/module.smooth:2
          body = SMonoReference(
            type = Int
            referencedName = int
            location = {t-project}/module.smooth:3
          )
        )
      )
    )
  ]
  scope = SScope(
    types = [
      Blob -> STypeDefinition(
        type = Blob
        fqn = Blob
        location = internal
      )
      Bool -> STypeDefinition(
        type = Bool
        fqn = Bool
        location = internal
      )
      Int -> STypeDefinition(
        type = Int
        fqn = Int
        location = internal
      )
      String -> STypeDefinition(
        type = String
        fqn = String
        location = internal
      )
        <empty bindings>
          <empty bindings>
    ]
    evaluables = [
      <empty bindings>
        <empty bindings>
          result -> sPolyEvaluable(
            typeParams = []
            evaluable = SNamedExprValue(
              type = (Int)->Int
              fqn = result
              location = {t-project}/module.smooth:1
              body = SLambda(
                fqn = result:lambda~1
                type = (Int)->Int
                params = [
                  SItem(
                    type = Int
                    fqn = result:lambda~1:int
                    defaultValue = None
                    location = {t-project}/module.smooth:2
                  )
                ]
                location = {t-project}/module.smooth:2
                body = SMonoReference(
                  type = Int
                  referencedName = int
                  location = {t-project}/module.smooth:3
                )
              )
            )
          )
    ]
  )
)